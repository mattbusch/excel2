{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Common/DeleteStudent.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport DeleteImage from './../../assets/images/Delete.png';\nimport UserServices from '../../services/UserServices';\n/**\n * Pop-up button used to delete a user from the program.\n * The user will be returned to the Users list after\n * the user is deleted. The action cannot be easily \n * undone.\n * \n * Dialog created using the Material UI Dialog \n * demos here: https://material-ui.com/components/dialogs/\n * (Febuary 2020)\n */\n\nclass DeleteStudent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.openWindow = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.closeWindow = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      this.props.history.push('/users');\n      UserServices.deleteStudent(this.props.email);\n      this.closeWindow();\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        marginTop: '1vh',\n        marginBottom: '1vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.openWindow,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Delete User\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.closeWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        flex: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Are you sure you would like to delete this student?\")), React.createElement(Button, {\n      onClick: this.closeWindow,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DeleteImage,\n      width: \"22vw\",\n      height: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Delete\"))));\n  }\n\n}\n\nDeleteStudent.propTypes = {\n  email: PropTypes.string.isRequired\n};\nexport default withRouter(DeleteStudent);","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Common/DeleteStudent.js"],"names":["React","Button","Dialog","DialogActions","DialogTitle","withRouter","PropTypes","DeleteImage","UserServices","DeleteStudent","Component","constructor","props","openWindow","setState","open","closeWindow","handleSubmit","history","push","deleteStudent","email","state","render","marginTop","marginBottom","display","flexDirection","flex","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport {\n  withRouter\n} from 'react-router-dom'\nimport PropTypes from 'prop-types';\n\nimport DeleteImage from './../../assets/images/Delete.png'\nimport UserServices from '../../services/UserServices';\n\n/**\n * Pop-up button used to delete a user from the program.\n * The user will be returned to the Users list after\n * the user is deleted. The action cannot be easily \n * undone.\n * \n * Dialog created using the Material UI Dialog \n * demos here: https://material-ui.com/components/dialogs/\n * (Febuary 2020)\n */\nclass DeleteStudent extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false\n    }\n\n  }\n\n  openWindow = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  closeWindow = () => {\n    this.setState({\n      open: false\n    })\n  };\n\n  handleSubmit = () => {\n    this.props.history.push('/users');\n    UserServices.deleteStudent(this.props.email)\n    this.closeWindow()\n  }\n\n  render() {\n    return (\n      <div style={{ marginTop: '1vh', marginBottom: '1vh' }}>\n        <Button variant='contained' onClick={this.openWindow} color='secondary'>Delete User</Button>\n        <Dialog open={this.state.open} onClose={this.closeWindow}>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <div style={{ flex: 1 }}>\n              <DialogTitle>Are you sure you would like to delete this student?</DialogTitle>\n            </div>\n\n            <Button onClick={this.closeWindow} size='small'>\n              <img src={DeleteImage} width=\"22vw\" height=\"50%\" />\n            </Button>\n          </div>\n\n          <DialogActions>\n            <Button variant='contained' onClick={this.handleSubmit} color=\"secondary\">\n              Delete\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  \n}\n\nDeleteStudent.propTypes = {\n  email: PropTypes.string.isRequired\n}\n\n\nexport default withRouter(DeleteStudent);"]},"metadata":{},"sourceType":"module"}