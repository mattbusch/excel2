{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/UserDetails.js\";\nimport React, { Component } from 'react';\nimport './../styles/UserDetails.css';\nimport Colors from '../assets/text/Colors.js';\nimport Header from './Home/Header.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CompetencyCard from './Competencies/CompetencyCard';\nimport TLCard from './TrackingLocations/TLCard';\nimport UserServices from '../services/UserServices';\nimport AssignMentor from './Common/AssignMentor.js';\nimport DeleteStudent from './Common/DeleteStudent.js';\nimport UnAssignMentor from './Common/UnAssignMentor.js';\nimport BasicButton from './Common/BasicButton.js';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../redux/action';\nimport { connect } from 'react-redux';\n\nclass UserDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.competencies = UserServices.getCompetencies().filter(competency => {\n      return competency;\n    }).sort(function (a, b) {\n      if (a.domain > b.domain) {\n        return 1;\n      }\n\n      return -1;\n    });\n    this.trackingLocations = UserServices.getTrackingLocations().filter(tl => {\n      return tl;\n    });\n\n    this.assign = event => {\n      alert(event.target.text);\n    };\n\n    this.evaluate = event => {\n      this.props.setCurrentUser(this.username);\n      this.props.history.push('/dashboard');\n    };\n  }\n\n  getMentor() {\n    let mentor = UserServices.getMentor(this.props.location.state.email);\n\n    if (mentor) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Mentor: \", mentor), React.createElement(UnAssignMentor, {\n        studentEmail: this.props.location.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(AssignMentor, {\n      studentEmail: this.props.location.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Header, {\n      handleLogout: () => this.handleLogout,\n      pageName: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UserDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UD-header\",\n      style: {\n        color: Colors.blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, this.props.location.state.name), React.createElement(\"div\", {\n      className: \"UD-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.props.location.state.userType, this.props.location.state.userType == \"Student\" ? this.getMentor() : null, React.createElement(DeleteStudent, {\n      email: this.props.location.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }), React.createElement(BasicButton, {\n      handleClick: this.evaluate,\n      label: \"Evaluate\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), this.props.location.state.userType == \"Student\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"udtc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, \"Competencies\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Tracking Locations\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.competencies.map((competency, i) => {\n      return React.createElement(CompetencyCard, {\n        title: this.competencies[i].title,\n        domain: this.competencies[i].domain,\n        subcategory: this.competencies[i].subcategory,\n        difficulty: this.competencies[i].difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.trackingLocations.map((tl, i) => {\n      return React.createElement(TLCard, {\n        name: this.trackingLocations[i].name,\n        competencies: this.trackingLocations[i].competencies,\n        locationID: this.trackingLocations[i].locationID,\n        instructors: this.trackingLocations[i].instructors,\n        students: this.trackingLocations[i].students,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      });\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(ACTIONS.setCurrentUser(currentUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserDetails));","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/UserDetails.js"],"names":["React","Component","Colors","Header","CompetencyCard","TLCard","UserServices","AssignMentor","DeleteStudent","UnAssignMentor","BasicButton","withRouter","ACTIONS","connect","UserDetails","competencies","getCompetencies","filter","competency","sort","a","b","domain","trackingLocations","getTrackingLocations","tl","assign","event","alert","target","text","evaluate","props","setCurrentUser","username","history","push","getMentor","mentor","location","state","email","render","handleLogout","color","blue","name","userType","map","i","title","subcategory","difficulty","locationID","instructors","students","mapStateToProps","currentUser","user","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './../styles/UserDetails.css';\nimport Colors from '../assets/text/Colors.js';\nimport Header from './Home/Header.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CompetencyCard from './Competencies/CompetencyCard';\nimport TLCard from './TrackingLocations/TLCard';\nimport UserServices from '../services/UserServices';\nimport AssignMentor from './Common/AssignMentor.js';\nimport DeleteStudent from './Common/DeleteStudent.js';\nimport UnAssignMentor from './Common/UnAssignMentor.js';\nimport BasicButton from './Common/BasicButton.js';\n\n\n\n\n\nimport {\n  withRouter\n} from 'react-router-dom'\n\nimport ACTIONS from '../redux/action'\nimport { connect } from 'react-redux';\n\n\nclass UserDetails extends Component {\n\n\n  competencies = UserServices.getCompetencies().filter(competency => {\n    return (competency);\n  }).sort(function(a, b){\n      if (a.domain > b.domain) {\n        return 1;\n      }\n      return -1;\n\n  })\n \n\n  trackingLocations = UserServices.getTrackingLocations().filter(tl => {\n    return (tl);\n  })\n\n  assign = event => {\n    alert(event.target.text);\n  };\n\n  evaluate = event => {\n    this.props.setCurrentUser(this.username);\n    this.props.history.push('/dashboard');\n\n  };\n\n  getMentor() {\n    let mentor = UserServices.getMentor(this.props.location.state.email);\n    if (mentor) {\n      return (\n        <div>\n          <p>Mentor: {mentor}</p>\n           <UnAssignMentor studentEmail={this.props.location.state.email} />\n          \n        </div>\n      )\n    }\n    return (\n      <AssignMentor studentEmail={this.props.location.state.email}/>\n    );\n  }\n\n\n  render() {\n\n    return (\n      <div>\n        <Header handleLogout={() => this.handleLogout} pageName=\"Users\"/>\n        <div className=\"Users\">\n          <div className=\"UserDetails\">\n            <div className =\"UD-header\" style={{color:Colors.blue}}>\n              {this.props.location.state.name}\n\n            </div>\n            <div className = \"UD-body\">\n            {this.props.location.state.userType}\n            {this.props.location.state.userType == \"Student\" ?\n                  \n                    this.getMentor() : null\n            }\n\n            <DeleteStudent email={this.props.location.state.email}/>\n            <BasicButton handleClick={this.evaluate} label=\"Evaluate\"/>\n              {this.props.location.state.userType == \"Student\" &&\n                <div>\n                  <div className='udtc'>\n\n\n                      <h1>Competencies</h1>\n                      <h1>Tracking Locations</h1>\n                      <div>\n                          {this.competencies.map((competency, i) => {\n                              return( <CompetencyCard \n                                        title={this.competencies[i].title} \n                                        domain={this.competencies[i].domain}\n                                        subcategory={this.competencies[i].subcategory}\n                                        difficulty={this.competencies[i].difficulty}\n                                      />\n                              ); \n                          })}\n                      </div>\n                      <div>\n                          {this.trackingLocations.map((tl, i) => {\n                              return( <TLCard \n                                        name= {this.trackingLocations[i].name}\n                                        competencies= {this.trackingLocations[i].competencies}\n                                        locationID= {this.trackingLocations[i].locationID}\n                                        instructors= {this.trackingLocations[i].instructors}\n                                        students= {this.trackingLocations[i].students}\n                                      />\n                              ); \n                          })}\n                      </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser : (currentUser) => dispatch(ACTIONS.setCurrentUser(currentUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserDetails));"]},"metadata":{},"sourceType":"module"}