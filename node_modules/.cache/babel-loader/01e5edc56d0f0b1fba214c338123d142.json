{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Evaluation/Evaluations.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../../redux/action';\nimport { connect } from 'react-redux';\nimport Header from './../Home/Header.js';\nimport EvaluationForm from './EvaluationForm.js';\nimport EvaluationServices from './../../services/EvaluationServices.js';\nimport HistoryList from './HistoryList.js';\nimport CompetencyServices from './../../services/CompetencyServices.js';\n\nclass Evaluations extends Component {\n  constructor(...args) {\n    super(...args);\n    this.student = this.props.location.state.studentId;\n    this.history = EvaluationServices.getHistoryforUserComp(this.props.location.state.studentId, this.props.location.state.competencyId);\n    this.competency = CompetencyServices.getCompetencyById(this.props.location.state.competencyId);\n  }\n\n  render() {\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Header, {\n      handleLogout: () => this.handleLogout,\n      pageName: \"Evaluations\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"Evaluations for \", this.student, \" on the Competency \", this.competency.id, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, this.competency.title)), React.createElement(EvaluationForm, {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      eval4: \"4: Student consistently performs this skill independently and in proper settings. They understand this concept without further assistance or explanation required. Student is aware of the importance of this competency.\",\n      eval3: \"3: Student is able to perform this skill or can do most of the skill with some basic prompting or reminders from others.\",\n      eval2: \"2: Student attempts to perform this skill independently, but requires assistance, support or reminders from others to execute accurately. Student is unlikely to perform this skill without assistance from others. \",\n      eval1: \"1: Student requires support from start to finish of the skill. Student does not understand the skill or why it is necessary. A student earns a 1 instead of a 0 in this category if they continue to attempt this skill with help from others.\",\n      eval0: \"0: Student is completely unwilling to learn this skill. Student expresses no interest in performing even with supports. Or, student does not have the opportunity to perform this skill (ex. Driving a car, paying 100% of expenses to live independently, or physical limitations prohibit somebody from cooking or working out properly).\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), \"Previous Evaluations:\", React.createElement(HistoryList, {\n      history: this.history,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(ACTIONS.setCurrentUser(currentUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Evaluations));","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Evaluation/Evaluations.js"],"names":["React","Component","withRouter","ACTIONS","connect","Header","EvaluationForm","EvaluationServices","HistoryList","CompetencyServices","Evaluations","student","props","location","state","studentId","history","getHistoryforUserComp","competencyId","competency","getCompetencyById","render","console","log","handleLogout","id","title","e","preventDefault","mapStateToProps","currentUser","user","mapDispatchToProps","dispatch","setCurrentUser"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SACEC,UADF,QAEO,kBAFP;AAGA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,kBAAP,MAA+B,wCAA/B;;AAGA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAElCU,OAFkC,GAExB,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,SAFF;AAAA,SAGlCC,OAHkC,GAGxBT,kBAAkB,CAACU,qBAAnB,CAAyC,KAAKL,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,SAAnE,EAA8E,KAAKH,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BI,YAAxG,CAHwB;AAAA,SAIlCC,UAJkC,GAIrBV,kBAAkB,CAACW,iBAAnB,CAAqC,KAAKR,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BI,YAA/D,CAJqB;AAAA;;AAKlCG,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,KAAjB;AAEE,WAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,YAAY,EAAE,MAAM,KAAKY,YAAjC;AAA+C,MAAA,QAAQ,EAAC,aAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACmB,KAAKb,OADxB,yBACoD,KAAKQ,UAAL,CAAgBM,EADpE,EACuE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKN,UAAL,CAAgBO,KAApB,CADvE,CAFF,EAKE,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEC,CAAC,IAAI;AAAEA,QAAAA,CAAC,CAACC,cAAF;AAAqB,OAAtD;AACE,MAAA,KAAK,EAAG,2NADV;AAEE,MAAA,KAAK,EAAG,0HAFV;AAGE,MAAA,KAAK,EAAG,sNAHV;AAIE,MAAA,KAAK,EAAG,gPAJV;AAKE,MAAA,KAAK,EAAG,6UALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,2BAaE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAI,KAAKZ,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,CAFF;AAoBH;;AA5BiC;;AA+BpC,MAAMa,eAAe,GAAIf,KAAD,KAAY;AAClCgB,EAAAA,WAAW,EAAEhB,KAAK,CAACiB,IAAN,CAAWD;AADU,CAAZ,CAAxB;;AAGA,MAAME,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,cAAc,EAAIJ,WAAD,IAAiBG,QAAQ,CAAC9B,OAAO,CAAC+B,cAAR,CAAuBJ,WAAvB,CAAD;AADrC,GAAP;AAGD,CAJD;;AAMA,eAAe1B,OAAO,CAACyB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C9B,UAAU,CAACQ,WAAD,CAAvD,CAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  withRouter\n} from 'react-router-dom'\nimport ACTIONS from '../../redux/action'\nimport { connect } from 'react-redux';\nimport Header from './../Home/Header.js';\nimport EvaluationForm from './EvaluationForm.js';\nimport EvaluationServices from './../../services/EvaluationServices.js';\nimport HistoryList from './HistoryList.js'\nimport CompetencyServices from './../../services/CompetencyServices.js';\n\n\nclass Evaluations extends Component {\n\n  student = this.props.location.state.studentId;\n  history = EvaluationServices.getHistoryforUserComp(this.props.location.state.studentId, this.props.location.state.competencyId)\n  competency = CompetencyServices.getCompetencyById(this.props.location.state.competencyId)\n  render() {\n    console.log(this.props)\n\n      return (\n        \n        <div>\n          <Header handleLogout={() => this.handleLogout} pageName=\"Evaluations\"/>\n          <div>\n            Evaluations for {this.student} on the Competency {this.competency.id}<b>{this.competency.title}</b>\n          </div>\n          <EvaluationForm onSubmit={e => { e.preventDefault(); }}\n            eval4 = \"4: Student consistently performs this skill independently and in proper settings. They understand this concept without further assistance or explanation required. Student is aware of the importance of this competency.\"\n            eval3 = \"3: Student is able to perform this skill or can do most of the skill with some basic prompting or reminders from others.\"\n            eval2 = \"2: Student attempts to perform this skill independently, but requires assistance, support or reminders from others to execute accurately. Student is unlikely to perform this skill without assistance from others. \"\n            eval1 = \"1: Student requires support from start to finish of the skill. Student does not understand the skill or why it is necessary. A student earns a 1 instead of a 0 in this category if they continue to attempt this skill with help from others.\"\n            eval0 = \"0: Student is completely unwilling to learn this skill. Student expresses no interest in performing even with supports. Or, student does not have the opportunity to perform this skill (ex. Driving a car, paying 100% of expenses to live independently, or physical limitations prohibit somebody from cooking or working out properly).\"\n          />\n          Previous Evaluations:\n          <HistoryList history = {this.history}/>\n\n        </div>\n        \n      );\n  }\n}\n    \nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser : (currentUser) => dispatch(ACTIONS.setCurrentUser(currentUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Evaluations));\n"]},"metadata":{},"sourceType":"module"}