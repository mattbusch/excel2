{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Common/InviteUserButton.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport DeleteImage from './../../assets/images/Delete.png';\nimport UserServices from '../../services/UserServices';\n/**\n * Pop-up button used to invite a user to the program. The\n * user must provide an email of the user and a user\n * type for the user. An email will be sent to the\n * user where they will be able to set up their account.\n * \n * Dialog created using the Material UI Dialog \n * demos here: https://material-ui.com/components/dialogs/\n * and here: https://material-ui.com/components/selects/\n * (January 2020)\n */\n\nclass InviteUserButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeType = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleChangeEmail = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.closeWindow = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.openWindow = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleSubmit = () => {\n      if (this.state.email == '' || this.state.type == '') {\n        alert('Please select a type and enter the user\\'s email!');\n      } else {\n        UserServices.inviteNewUser(this.state.email, this.state.type);\n        alert('Invited ' + this.state.email + ' as a(n) ' + this.state.type + '.');\n        this.closeWindow();\n      }\n    };\n\n    this.getUserTypes = () => {\n      let userTypes = ['Administrator', 'Instructor', 'Peer Coordinator', 'Student'];\n      return userTypes.map(item => React.createElement(\"option\", {\n        value: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, item));\n    };\n\n    this.state = {\n      open: false,\n      email: '',\n      type: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.openWindow,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Invite a New User\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.closeWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Email Invite for New User to Join\"), React.createElement(Button, {\n      onClick: this.closeWindow,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DeleteImage,\n      width: \"22vw\",\n      height: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Select, {\n      label: \"User Type\",\n      native: true,\n      value: this.state.type,\n      onChange: this.handleChangeType,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.getUserTypes()), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      onChange: this.handleChangeEmail,\n      value: this.state.email,\n      label: \"User Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"Send Invite\"))));\n  }\n\n}\n\nexport default InviteUserButton;","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Common/InviteUserButton.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","Select","DeleteImage","UserServices","InviteUserButton","Component","constructor","props","handleChangeType","event","setState","type","target","value","handleChangeEmail","email","closeWindow","open","openWindow","handleSubmit","state","alert","inviteNewUser","getUserTypes","userTypes","map","item","render","display","flexDirection"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport DeleteImage from './../../assets/images/Delete.png'\n\nimport UserServices from '../../services/UserServices';\n\n/**\n * Pop-up button used to invite a user to the program. The\n * user must provide an email of the user and a user\n * type for the user. An email will be sent to the\n * user where they will be able to set up their account.\n * \n * Dialog created using the Material UI Dialog \n * demos here: https://material-ui.com/components/dialogs/\n * and here: https://material-ui.com/components/selects/\n * (January 2020)\n */\nclass InviteUserButton extends React.Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      open: false,\n      email: '',\n      type: ''\n    }\n  }\n\n  handleChangeType = (event) => {\n    this.setState({\n      type: event.target.value\n    })\n  };\n\n  handleChangeEmail = (event) => {\n    this.setState({\n      email: event.target.value\n    })\n  };\n\n  closeWindow = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  openWindow = () => {\n    this.setState({\n      open: true\n    })\n  };\n\n  handleSubmit = () => {\n    if (this.state.email == '' || this.state.type == '') {\n      alert('Please select a type and enter the user\\'s email!');\n    } else {\n      UserServices.inviteNewUser(this.state.email, this.state.type);\n      alert('Invited ' + this.state.email + ' as a(n) ' + this.state.type + '.');\n      this.closeWindow();\n    }\n  }\n\n  getUserTypes = () => {\n    let userTypes = ['Administrator', 'Instructor', 'Peer Coordinator', 'Student']\n    return userTypes.map((item) => <option value={item}>{item}</option>)\n  }\n\n  render() {\n    return (\n      <div>\n      <Button variant='contained' onClick={this.openWindow} color='secondary'>Invite a New User</Button>\n      <Dialog open={this.state.open} onClose={this.closeWindow}>\n        <div style={{display: 'flex', flexDirection: 'row'}}>\n          <DialogTitle>Email Invite for New User to Join</DialogTitle>\n          <Button onClick={this.closeWindow} size = 'small'>\n              <img  src={DeleteImage} width=\"22vw\" height=\"50%\"/>\n          </Button>\n        </div>\n        \n        <DialogContent>\n            <Select\n              label=\"User Type\"\n              native\n              value={this.state.type}\n              onChange={this.handleChangeType}\n            >\n              {this.getUserTypes()}\n            </Select>\n            <br/>\n            <TextField onChange={this.handleChangeEmail} value={this.state.email} label=\"User Email\" />\n        </DialogContent>\n        <DialogActions>\n          <Button variant='contained' onClick={this.handleSubmit} color=\"secondary\">\n            Send Invite\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n    )\n  }\n}\n\nexport default InviteUserButton;"]},"metadata":{},"sourceType":"module"}