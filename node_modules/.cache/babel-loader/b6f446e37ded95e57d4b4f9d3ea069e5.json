{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/UserDetails.js\";\nimport React, { Component } from 'react';\nimport './../styles/UserDetails.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Colors from '../assets/text/Colors.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Home/Header.js';\nimport dummyData from './../services/DummyData.js';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CompetencyCard from './UserView/CompetencyCard';\nimport TLCard from './UserView/TLCard';\nimport UserServices from '../services/UserServices';\nimport AssignMentor from './Common/AssignMentor.js';\nimport { withRouter } from 'react-router-dom';\nimport ACTIONS from '../redux/action';\nimport { connect } from 'react-redux';\n\nclass UserDetails extends Component {\n  constructor(...args) {\n    super(...args);\n    this.competencies = UserServices.getCompetencies().filter(competency => {\n      return competency;\n    });\n    this.trackingLocations = UserServices.getTrackingLocations().filter(tl => {\n      return tl;\n    }).sort(a, b => {\n      if (a.domain > b.domain) {\n        return 1;\n      }\n\n      return -1;\n    });\n\n    this.assign = event => {\n      alert(event.target.text);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Header, {\n      handleLogout: () => this.handleLogout,\n      pageName: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UserDetails\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"UD-header\",\n      style: {\n        color: Colors.blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"User: \", this.props.location.state.name), React.createElement(\"div\", {\n      className: \"UD-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.props.location.state.userType == \"Student\" && React.createElement(AssignMentor, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), \"Role = \", this.props.location.state.userType, this.props.location.state.userType == \"Student\" && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"udtc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Competencies\"), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Tracking Locations\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.competencies.map((competency, i) => {\n      return React.createElement(CompetencyCard, {\n        title: this.competencies[i].title,\n        domain: this.competencies[i].domain,\n        subcategory: this.competencies[i].subcategory,\n        difficulty: this.competencies[i].difficulty,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      });\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.trackingLocations.map((tl, i) => {\n      return React.createElement(TLCard, {\n        name: this.trackingLocations[i].name,\n        competencies: this.trackingLocations[i].competencies,\n        locationID: this.trackingLocations[i].locationID,\n        instructors: this.trackingLocations[i].instructors,\n        students: this.trackingLocations[i].students,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      });\n    }))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(ACTIONS.setCurrentUser(currentUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserDetails));","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/UserDetails.js"],"names":["React","Component","TextField","Button","FormControl","Colors","makeStyles","Header","dummyData","Dropdown","CompetencyCard","TLCard","UserServices","AssignMentor","withRouter","ACTIONS","connect","UserDetails","competencies","getCompetencies","filter","competency","trackingLocations","getTrackingLocations","tl","sort","a","b","domain","assign","event","alert","target","text","render","handleLogout","color","blue","props","location","state","name","userType","map","i","title","subcategory","difficulty","locationID","instructors","students","mapStateToProps","currentUser","user","mapDispatchToProps","dispatch","setCurrentUser"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './../styles/UserDetails.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Colors from '../assets/text/Colors.js';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Header from './Home/Header.js';\nimport dummyData from './../services/DummyData.js';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport CompetencyCard from './UserView/CompetencyCard';\nimport TLCard from './UserView/TLCard';\nimport UserServices from '../services/UserServices';\nimport AssignMentor from './Common/AssignMentor.js'\n\n\n\n\nimport {\n  withRouter\n} from 'react-router-dom'\n\nimport ACTIONS from '../redux/action'\nimport { connect } from 'react-redux';\n\n\nclass UserDetails extends Component {\n\n\n  competencies = UserServices.getCompetencies().filter(competency => {\n    return (competency);\n  }) \n\n  trackingLocations = UserServices.getTrackingLocations().filter(tl => {\n    return (tl);\n  }).sort(a, b=> {\n      if (a.domain > b.domain) {\n        return 1;\n      }\n      return -1;\n\n  })\n\n  assign = event => {\n    alert(event.target.text);\n  };\n\n\n  render() {\n\n    return (\n      <div>\n        <Header handleLogout={() => this.handleLogout} pageName=\"Users\"/>\n        <div className=\"Users\">\n          <div className=\"UserDetails\">\n            <div className =\"UD-header\" style={{color:Colors.blue}}>\n              User: {this.props.location.state.name}\n\n            </div>\n            <div className = \"UD-body\">\n            {this.props.location.state.userType == \"Student\" &&\n                <AssignMentor/>\n              }\n              Role = {this.props.location.state.userType}\n              {this.props.location.state.userType == \"Student\" &&\n                <div>\n                  <div className='udtc'>\n\n\n                      <h1>Competencies</h1>\n                      <h1>Tracking Locations</h1>\n                      <div>\n                          {this.competencies.map((competency, i) => {\n                              return( <CompetencyCard \n                                        title={this.competencies[i].title} \n                                        domain={this.competencies[i].domain}\n                                        subcategory={this.competencies[i].subcategory}\n                                        difficulty={this.competencies[i].difficulty}\n                                      />\n                              ); \n                          })}\n                      </div>\n                      <div>\n                          {this.trackingLocations.map((tl, i) => {\n                              return( <TLCard \n                                        name= {this.trackingLocations[i].name}\n                                        competencies= {this.trackingLocations[i].competencies}\n                                        locationID= {this.trackingLocations[i].locationID}\n                                        instructors= {this.trackingLocations[i].instructors}\n                                        students= {this.trackingLocations[i].students}\n                                      />\n                              ); \n                          })}\n                      </div>\n                  </div>\n                </div>\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser : (currentUser) => dispatch(ACTIONS.setCurrentUser(currentUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(UserDetails));"]},"metadata":{},"sourceType":"module"}