{"ast":null,"code":"var _jsxFileName = \"/home/dev/integrate/excel-tracker/excel-tracker-application/src/components/Common/AssignMentor.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteImage from './../../assets/images/Delete.png';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport UserServices from '../../services/UserServices';\n/**\n * Pop-up button used to Assign a mentor to a\n * Student in the Excel Program\n * \n * Dialog created using the Material UI Dialog\n * demos here: https://material-ui.com/components/dialogs/\n * and here: https://material-ui.com/components/selects/\n * (Febuary 2020)\n */\n\nclass AssignMentor extends React.Component {\n  componentDidMount() {\n    console.log(UserServices.getMentors());\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeMentor = event => {\n      this.setMentor(event.target.value);\n    };\n\n    this.openWindow = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.closeWindow = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleSubmit = () => {\n      UserServices.assignMentor(this.state.type, this.props.studentEmail);\n      this.closeWindow();\n    };\n\n    this.state = {\n      mentor: '',\n      open: false\n    };\n  }\n\n  setMentor(newMentor) {\n    this.setState({\n      mentor: newMentor\n    });\n  }\n\n  rendorMentorList() {\n    const mentors = UserServices.getMentors();\n    const listItems = mentors.map(item => React.createElement(\"option\", {\n      value: item.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, item.name));\n    return listItems;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.openWindow,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Assign Mentor\"), React.createElement(Dialog, {\n      open: this.state.open,\n      onClose: this.closeWindow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'row'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Assign a Mentor to Student\"), React.createElement(Button, {\n      onClick: this.closeWindow,\n      size: \"small\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: DeleteImage,\n      width: \"22vw\",\n      height: \"50%\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Select, {\n      label: \"Mentor Name\",\n      native: true,\n      value: this.state.mentor,\n      onChange: this.handleChangeMentor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.rendorMentorList())), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Assign\"))));\n  }\n\n}\n\nAssignMentor.propTypes = {\n  studentEmail: PropTypes.string.isRequired\n};\nexport default AssignMentor;","map":{"version":3,"sources":["/home/dev/integrate/excel-tracker/excel-tracker-application/src/components/Common/AssignMentor.js"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","DeleteImage","Select","PropTypes","UserServices","AssignMentor","Component","componentDidMount","console","log","getMentors","constructor","props","handleChangeMentor","event","setMentor","target","value","openWindow","setState","open","closeWindow","handleSubmit","assignMentor","state","type","studentEmail","mentor","newMentor","rendorMentorList","mentors","listItems","map","item","email","name","render","display","flexDirection","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AAEA,OAAOC,MAAP,MAAmB,0BAAnB;AAGA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAOC,YAAP,MAAyB,6BAAzB;AAGA;;;;;;;;;;AASA,MAAMC,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAEzCC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACM,UAAb,EAAZ;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAgBnBC,kBAhBmB,GAgBEC,KAAK,IAAI;AAC5B,WAAKC,SAAL,CAAeD,KAAK,CAACE,MAAN,CAAaC,KAA5B;AACD,KAlBkB;;AAAA,SAoBnBC,UApBmB,GAoBN,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KAxBkB;;AAAA,SA0BnBC,WA1BmB,GA0BL,MAAM;AAClB,WAAKF,QAAL,CAAc;AACZC,QAAAA,IAAI,EAAE;AADM,OAAd;AAGD,KA9BkB;;AAAA,SAgCnBE,YAhCmB,GAgCJ,MAAM;AACnBlB,MAAAA,YAAY,CAACmB,YAAb,CAA0B,KAAKC,KAAL,CAAWC,IAArC,EAA2C,KAAKb,KAAL,CAAWc,YAAtD;AACA,WAAKL,WAAL;AACD,KAnCkB;;AAGjB,SAAKG,KAAL,GAAa;AACXG,MAAAA,MAAM,EAAE,EADG;AAEXP,MAAAA,IAAI,EAAE;AAFK,KAAb;AAKD;;AAEDL,EAAAA,SAAS,CAACa,SAAD,EAAY;AACnB,SAAKT,QAAL,CAAc;AACZQ,MAAAA,MAAM,EAAEC;AADI,KAAd;AAGD;;AAuBDC,EAAAA,gBAAgB,GAAG;AACjB,UAAMC,OAAO,GAAG1B,YAAY,CAACM,UAAb,EAAhB;AACA,UAAMqB,SAAS,GAAGD,OAAO,CAACE,GAAR,CAAaC,IAAD,IAAU;AAAQ,MAAA,KAAK,EAAEA,IAAI,CAACC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BD,IAAI,CAACE,IAAjC,CAAtB,CAAlB;AACA,WAAOJ,SAAP;AACD;;AAEDK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKlB,UAA1C;AAAsD,MAAA,KAAK,EAAC,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAE,KAAKM,KAAL,CAAWJ,IAAzB;AAA+B,MAAA,OAAO,EAAE,KAAKC,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAE;AAAEgB,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKjB,WAAtB;AAAmC,MAAA,IAAI,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEpB,WAAV;AAAuB,MAAA,KAAK,EAAC,MAA7B;AAAoC,MAAA,MAAM,EAAC,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,CADF,EAOE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,KAAK,EAAC,aADR;AAEE,MAAA,MAAM,MAFR;AAGE,MAAA,KAAK,EAAE,KAAKuB,KAAL,CAAWG,MAHpB;AAIE,MAAA,QAAQ,EAAE,KAAKd,kBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMG,KAAKgB,gBAAL,EANH,CADF,CAPF,EAiBE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,OAAO,EAAE,KAAKP,YAA1C;AAAwD,MAAA,KAAK,EAAC,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CAjBF,CAFF,CADF;AA4BD;;AA9EwC;;AAkF3CjB,YAAY,CAACkC,SAAb,GAAyB;AACvBb,EAAAA,YAAY,EAAEvB,SAAS,CAACqC,MAAV,CAAiBC;AADR,CAAzB;AAIA,eAAgBpC,YAAhB","sourcesContent":["import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DeleteImage from './../../assets/images/Delete.png'\n\nimport Select from '@material-ui/core/Select';\n\n\nimport PropTypes from 'prop-types';\n\nimport UserServices from '../../services/UserServices';\n\n\n/**\n * Pop-up button used to Assign a mentor to a\n * Student in the Excel Program\n * \n * Dialog created using the Material UI Dialog\n * demos here: https://material-ui.com/components/dialogs/\n * and here: https://material-ui.com/components/selects/\n * (Febuary 2020)\n */\nclass AssignMentor extends React.Component {\n\n  componentDidMount() {\n    console.log(UserServices.getMentors())\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mentor: '',\n      open: false\n    }\n\n  }\n\n  setMentor(newMentor) {\n    this.setState({\n      mentor: newMentor\n    })\n  }\n\n  handleChangeMentor = event => {\n    this.setMentor(event.target.value);\n  };\n\n  openWindow = () => {\n    this.setState({\n      open: true\n    })\n  }\n\n  closeWindow = () => {\n    this.setState({\n      open: false\n    })\n  }\n\n  handleSubmit = () => {\n    UserServices.assignMentor(this.state.type, this.props.studentEmail)\n    this.closeWindow()\n  }\n\n  rendorMentorList() {\n    const mentors = UserServices.getMentors()\n    const listItems = mentors.map((item) => <option value={item.email}>{item.name}</option>)\n    return listItems\n  }\n\n  render() {\n    return (\n      <div>\n        <Button variant='contained' onClick={this.openWindow} color='secondary'>Assign Mentor</Button>\n        <Dialog open={this.state.open} onClose={this.closeWindow}>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <DialogTitle>Assign a Mentor to Student</DialogTitle>\n            <Button onClick={this.closeWindow} size='small'>\n              <img src={DeleteImage} width=\"22vw\" height=\"50%\" />\n            </Button>\n          </div>\n          <DialogContent>\n            <Select\n              label=\"Mentor Name\"\n              native\n              value={this.state.mentor}\n              onChange={this.handleChangeMentor}\n            >\n              {this.rendorMentorList()}\n            </Select>\n          </DialogContent>\n          <DialogActions>\n            <Button variant='contained' onClick={this.handleSubmit} color=\"secondary\">\n              Assign\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n\n}\n\nAssignMentor.propTypes = {\n  studentEmail: PropTypes.string.isRequired\n}\n\nexport default (AssignMentor);"]},"metadata":{},"sourceType":"module"}