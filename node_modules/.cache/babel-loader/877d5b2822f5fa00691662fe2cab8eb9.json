{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Common/AssignMentor.js\";\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport PropTypes from 'prop-types';\nimport UserServices from '../../services/UserServices';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\n\nclass AssignMentor extends React.Component {\n  componentDidMount() {\n    console.log(UserServices.getMentors());\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.handleChangeType = event => {\n      this.setType(event.target.value || '');\n    };\n\n    this.handleClickOpen = () => {\n      this.setOpen(true);\n    };\n\n    this.handleClose = () => {\n      this.setOpen(false);\n    };\n\n    this.handleSubmit = () => {\n      UserServices.assignMentor(this.state.type, this.props.studentEmail);\n      this.setOpen(false);\n    };\n\n    this.state = {\n      type: '',\n      open: false\n    };\n  }\n\n  setType(newType) {\n    this.setState({\n      type: newType\n    });\n  }\n\n  setOpen(newOpen) {\n    this.setState({\n      open: newOpen\n    });\n  }\n\n  rendorMentorList() {\n    const mentors = UserServices.getMentors();\n    const listItems = mentors.map(item => React.createElement(\"option\", {\n      value: item.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, item.name));\n    return listItems;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClickOpen,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Assign Mentor\"), React.createElement(Dialog, {\n      disableBackdropClick: true,\n      disableEscapeKeyDown: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Assign a Mentor to Student\"), React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: this.props.classes.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: this.props.classes.formControl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(InputLabel, {\n      htmlFor: \"demo-dialog-native\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Mentor Name\"), React.createElement(Select, {\n      native: true,\n      value: this.state.type,\n      onChange: this.handleChangeType,\n      input: React.createElement(Input, {\n        id: \"demo-dialog-native\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.rendorMentorList())))), React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Button, {\n      onClick: this.handleSubmit,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Assign\"))));\n  }\n\n}\n\nAssignMentor.propTypes = {\n  studentEmail: PropTypes.string.isRequired\n};\nexport default withStyles(useStyles)(AssignMentor);","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Common/AssignMentor.js"],"names":["React","withStyles","makeStyles","Button","Dialog","DialogActions","DialogContent","DialogTitle","InputLabel","Input","FormControl","Select","PropTypes","UserServices","useStyles","theme","container","display","flexWrap","formControl","margin","spacing","minWidth","AssignMentor","Component","componentDidMount","console","log","getMentors","constructor","props","handleChangeType","event","setType","target","value","handleClickOpen","setOpen","handleClose","handleSubmit","assignMentor","state","type","studentEmail","open","newType","setState","newOpen","rendorMentorList","mentors","listItems","map","item","email","name","render","classes","propTypes","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\n\nimport FormControl from '@material-ui/core/FormControl';\n\nimport Select from '@material-ui/core/Select';\n\n\nimport PropTypes from 'prop-types';\n\nimport UserServices from '../../services/UserServices';\n\nconst useStyles = makeStyles(theme => ({\n\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\n\nclass AssignMentor extends React.Component {\n\n  componentDidMount() {\n    console.log(UserServices.getMentors())\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: '',\n      open: false\n    }\n\n  }\n\n  setType(newType) {\n    this.setState({\n      type: newType\n    })\n  }\n\n\n  setOpen(newOpen) {\n    this.setState({\n      open: newOpen\n    })\n  }\n\n\n\n  handleChangeType = event => {\n    this.setType(event.target.value || '');\n  };\n\n  handleClickOpen = () => {\n    this.setOpen(true);\n  };\n\n  handleClose = () => {\n    this.setOpen(false);\n  };\n\n  handleSubmit = () => {\n    UserServices.assignMentor(this.state.type, this.props.studentEmail)\n    this.setOpen(false)\n  }\n\n  rendorMentorList() {\n    const mentors = UserServices.getMentors()\n    const listItems = mentors.map((item) => <option value={item.email}>{item.name}</option>)\n    return listItems\n  }\n\n  render() {\n    return (\n      <div>\n        <Button onClick={this.handleClickOpen} color='secondary'>Assign Mentor</Button>\n        <Dialog disableBackdropClick disableEscapeKeyDown open={this.state.open} onClose={this.handleClose}>\n          <DialogTitle>Assign a Mentor to Student</DialogTitle>\n          <DialogContent>\n            <form className={this.props.classes.container}>\n              <FormControl className={this.props.classes.formControl}>\n                <InputLabel htmlFor=\"demo-dialog-native\">Mentor Name</InputLabel>\n                <Select\n                  native\n                  value={this.state.type}\n                  onChange={this.handleChangeType}\n                  input={<Input id=\"demo-dialog-native\" />}\n                >\n                  {this.rendorMentorList()}\n                </Select>\n              </FormControl>\n            </form>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"secondary\">\n              Cancel\n            </Button>\n            <Button onClick={this.handleSubmit} color=\"secondary\">\n              Assign\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n  \n}\n\nAssignMentor.propTypes = {\n  studentEmail: PropTypes.string.isRequired\n}\n\nexport default withStyles(useStyles)(AssignMentor);"]},"metadata":{},"sourceType":"module"}