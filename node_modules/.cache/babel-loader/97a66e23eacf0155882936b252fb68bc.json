{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Evaluation/EvaluationForm.js\";\nimport React, { Component } from 'react';\nimport './../../styles/EvaluationForm.css';\nimport Button from '@material-ui/core/Button';\nimport { Input } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\n\nclass EvaluationForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionChange = changeEvent => {\n      this.setState({\n        selectedOption: changeEvent.target.value\n      });\n    };\n\n    var today = new Date(),\n        date = today.getMonth() + 1 + '-' + today.getDate() + '-' + today.getFullYear();\n    this.state = {\n      selectedOption: \"4\",\n      comments: \"\",\n      date: date\n    };\n  }\n\n  handleChangeText(value) {\n    this.setState({\n      comments: value\n    });\n    console.log(this.state.comments);\n  }\n\n  handleChangeDate(value) {\n    console.log(value);\n    this.setState({\n      date: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"grid-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"performanceColumn\",\n      class: \"sub-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Evaluation Score\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"eval\",\n      value: \"4\",\n      checked: this.state.selectedOption === \"4\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \"4 (Does it well/Has it mastered)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"eval\",\n      value: \"3\",\n      checked: this.state.selectedOption === \"3\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), \"3 (Can do by self and completes it fairly well)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"eval\",\n      value: \"2\",\n      checked: this.state.selectedOption === \"2\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), \"2 (Can do, but not well - Demonstrating progress)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"eval\",\n      value: \"1\",\n      checked: this.state.selectedOption === \"1\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), \"1 (Unable to do/Cannot do)\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"eval\",\n      value: \"0\",\n      checked: this.state.selectedOption === \"0\",\n      onChange: this.handleOptionChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), \"0 (Unwilling - can do but chooses not to do (If checked, then an explanation is required))\"))), React.createElement(\"div\", {\n      id: \"descriptionHolder\",\n      class: \"sub-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Evaluation Description\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, this.props.eval4), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, this.props.eval3), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, this.props.eval2), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, this.props.eval1), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.props.eval0)), React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"General Comments\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"text\",\n      placeholder: \"Enter comments\",\n      onChange: event => this.handleChangeText(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Date of Entry\")), React.createElement(TextField, {\n      id: \"date\",\n      type: \"date\",\n      defaultValue: this.state.date,\n      onChange: event => this.handleChangeDate(event.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      onClick: this.onClick,\n      color: \"secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default EvaluationForm;","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Evaluation/EvaluationForm.js"],"names":["React","Component","Button","Input","TextField","EvaluationForm","constructor","props","handleOptionChange","changeEvent","setState","selectedOption","target","value","today","Date","date","getMonth","getDate","getFullYear","state","comments","handleChangeText","console","log","handleChangeDate","render","e","preventDefault","eval4","eval3","eval2","eval1","eval0","event","onClick"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport './../../styles/EvaluationForm.css';\nimport Button from '@material-ui/core/Button';\nimport { Input } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\n\nclass EvaluationForm extends Component {\n    constructor(props) {\n        super(props);\n\n        var today = new Date(),\n        date =  (today.getMonth() + 1) + '-' + today.getDate()  + '-' + today.getFullYear();\n\n        this.state = {\n            selectedOption: \"4\",\n            comments: \"\",\n            date:date\n        };\n    }\n\n\n    handleOptionChange = changeEvent => {\n        this.setState({\n            selectedOption: changeEvent.target.value\n        });\n    };\n\n    handleChangeText(value) {\n        this.setState({comments: value})\n        console.log(this.state.comments)\n      };\n\n    handleChangeDate(value) {\n        console.log(value)\n        this.setState({date: value})\n    \n      };\n\n\n    render () {\n        return (\n            <form onSubmit={e => { e.preventDefault(); }}>\n                <div class=\"grid-container\">\n                    <div id=\"performanceColumn\" class=\"sub-grid\">\n                        <div class=\"header\"><strong>Evaluation Score</strong></div>\n                        <div>\n                            <label>\n                            <input\n                                type=\"radio\"\n                                name=\"eval\"\n                                value=\"4\"\n                                checked={this.state.selectedOption === \"4\"}\n                                onChange={this.handleOptionChange}\n                                />\n                                4 (Does it well/Has it mastered)\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                            <input\n                                type=\"radio\"\n                                name=\"eval\"\n                                value=\"3\"\n                                checked={this.state.selectedOption === \"3\"}\n                                onChange={this.handleOptionChange}\n                                />\n                                3 (Can do by self and completes it fairly well)\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                            <input\n                                type=\"radio\"\n                                name=\"eval\"\n                                value=\"2\"\n                                checked={this.state.selectedOption === \"2\"}\n                                onChange={this.handleOptionChange}\n                                />\n                                2 (Can do, but not well - Demonstrating progress)\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                            <input\n                                type=\"radio\"\n                                name=\"eval\"\n                                value=\"1\"\n                                checked={this.state.selectedOption === \"1\"}\n                                onChange={this.handleOptionChange}\n                                />\n                                1 (Unable to do/Cannot do)\n                            </label>\n                        </div>\n                        <div>\n                            <label>\n                            <input\n                                type=\"radio\"\n                                name=\"eval\"\n                                value=\"0\"\n                                checked={this.state.selectedOption === \"0\"}\n                                onChange={this.handleOptionChange}\n                                />\n                                0 (Unwilling - can do but chooses not to do (If checked, then an explanation is required))\n                            </label>\n                        </div>\n                    </div>\n                    <div id=\"descriptionHolder\" class=\"sub-grid\">\n                        <div class=\"header\"><strong>Evaluation Description</strong></div>\n                        <div>{this.props.eval4}</div>\n                        <div>{this.props.eval3}</div>\n                        <div>{this.props.eval2}</div>\n                        <div>{this.props.eval1}</div>\n                        <div>{this.props.eval0}</div>\n                    </div>\n                    \n                    <div class=\"header\"><strong>General Comments</strong></div>\n                        <div>\n                        <Input\n                            type = \"text\"\n                            placeholder=\"Enter comments\"\n                            onChange={event => this.handleChangeText(event.target.value) } \n                        />\n                        </div>\n\n                        <div class=\"header\"><strong>Date of Entry</strong></div>\n                        <TextField\n                            id=\"date\"\n                            type=\"date\"\n                            defaultValue= {this.state.date}\n                            onChange={event => this.handleChangeDate(event.target.value) } \n                        />\n                        \n                </div>\n\n                <div>\n                        <Button variant='contained' onClick={this.onClick} color='secondary'>Submit</Button>\n                </div>\n              \n\n            </form>\n        );\n    }\n}\n\nexport default EvaluationForm;"]},"metadata":{},"sourceType":"module"}