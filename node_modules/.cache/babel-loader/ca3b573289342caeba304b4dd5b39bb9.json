{"ast":null,"code":"var _jsxFileName = \"/home/dev/excel-tracker/excel-tracker-application/src/components/Login/ResetPassword.js\";\nimport React, { Component } from 'react';\nimport './../../styles/ResetPassword.css';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Colors from '../../assets/text/Colors.js';\nimport ACTIONS from '../../redux/action';\nimport { connect } from 'react-redux';\n/**\n * Component used to reset a users password. Users will navigate to\n * this page when they are sent the reset password link.\n * \n * (January 2020)\n */\n\nclass ResetPassword extends Component {\n  constructor(...args) {\n    super(...args);\n    this.password = '';\n    this.passwordConfirm = '';\n\n    this.handleChangePassword = event => {\n      this.password = event.target.value || '';\n    };\n\n    this.handleChangePasswordConfirm = event => {\n      this.passwordConfirm = event.target.value || '';\n    };\n\n    this.resetPassword = event => {\n      if (this.password == this.passwordConfirm && this.password.length > 6) {\n        alert('Password Reset to ' + this.password);\n      } else {\n        alert(\"Passwords do not match or are shorter than six characters!\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"Login-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: Colors.blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Please enter your new password\")), React.createElement(\"div\", {\n      className: \"Login-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"Login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: Colors.blue\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-password-input\",\n      label: \"New Password\",\n      type: \"password\",\n      onChange: this.handleChangePassword,\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-password-input\",\n      label: \"Confirm Password\",\n      type: \"password\",\n      onChange: this.handleChangePasswordConfirm,\n      autoComplete: \"current-password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.resetPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Reset Password\")))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser: currentUser => dispatch(ACTIONS.setCurrentUser(currentUser))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/components/Login/ResetPassword.js"],"names":["React","Component","TextField","Button","Colors","ACTIONS","connect","ResetPassword","password","passwordConfirm","handleChangePassword","event","target","value","handleChangePasswordConfirm","resetPassword","length","alert","render","color","blue","marginTop","mapStateToProps","state","currentUser","user","mapDispatchToProps","dispatch","setCurrentUser"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport './../../styles/ResetPassword.css'\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Colors from '../../assets/text/Colors.js';\n\n\n\n\nimport ACTIONS from '../../redux/action'\nimport { connect } from 'react-redux';\n\n\n/**\n * Component used to reset a users password. Users will navigate to\n * this page when they are sent the reset password link.\n * \n * (January 2020)\n */\nclass ResetPassword extends Component {\n\n  password = '';\n  passwordConfirm = '';\n  handleChangePassword = event => {\n    this.password = (event.target.value || '');\n  };\n\n  handleChangePasswordConfirm = event => {\n    this.passwordConfirm = (event.target.value || '');\n  };\n\n  resetPassword = event => {\n    if (this.password == this.passwordConfirm && this.password.length > 6) {\n      alert('Password Reset to ' + this.password);\n    } else {\n      alert(\"Passwords do not match or are shorter than six characters!\");\n    }\n    \n  };\n  render() {\n\n\n\n\n    return (\n      <div className=\"Login\">\n        <header className=\"Login-header\">\n          <div style={{color:Colors.blue}}>\n            Please enter your new password\n          </div>\n        </header>\n        <div className=\"Login-body\">\n          <form className = \"Login-form\">\n            <div style={{color: Colors.blue}}>\n            <TextField\n              id=\"standard-password-input\"\n              label=\"New Password\"\n              type=\"password\"\n              onChange={this.handleChangePassword}\n              autoComplete=\"current-password\"\n            />\n            <br />\n            <div style={{marginTop: 10}}>\n              <TextField\n                id=\"standard-password-input\"\n                label=\"Confirm Password\"\n                type=\"password\"\n                onChange={this.handleChangePasswordConfirm}\n                autoComplete=\"current-password\"\n              />\n            </div>\n            </div>\n            <div style={{marginTop: 30}}>\n              <Button variant='contained' color=\"secondary\" onClick={this.resetPassword}>\n                Reset Password\n                </Button>\n            </div>\n            \n\n          </form>\n        </div>\n\n      </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser\n});\nconst mapDispatchToProps = dispatch => {\n  return {\n    setCurrentUser : (currentUser) => dispatch(ACTIONS.setCurrentUser(currentUser))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);\n\n\n"]},"metadata":{},"sourceType":"module"}