{"ast":null,"code":"import ACTIONS from \"./action\";\nimport _ from \"lodash\";\nimport { combineReducers } from \"redux\";\nconst defaultState = {\n  currentUser: \"\"\n};\n\nconst userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.Types.SET_CURRENT_USER:\n      {\n        console.log(\"ACTION: \", action);\n        let currentUser = action.payload;\n\n        let newState = _.cloneDeep(state);\n\n        newState.currentUser = currentUser;\n        return newState;\n      }\n\n    case ACTIONS.Types.SET_AUTH_TOKEN:\n      {\n        console.log(\"ACTION: \", action);\n        let newAuth = action.payload;\n\n        let newState = _.cloneDeep(state);\n\n        newState.authToken = newAuth;\n        newState.auth = true;\n        return newState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer\n});\nexport default rootReducer;","map":{"version":3,"sources":["/home/dev/excel2/src/redux/reducer.js"],"names":["ACTIONS","_","combineReducers","defaultState","currentUser","userReducer","state","action","type","Types","SET_CURRENT_USER","console","log","payload","newState","cloneDeep","SET_AUTH_TOKEN","newAuth","authToken","auth","rootReducer","user"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,UAApB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAArB;;AAIA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,OAAO,CAACS,KAAR,CAAcC,gBAAnB;AAAqC;AACnCC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,MAAxB;AAEA,YAAIH,WAAW,GAAGG,MAAM,CAACM,OAAzB;;AACA,YAAIC,QAAQ,GAAGb,CAAC,CAACc,SAAF,CAAYT,KAAZ,CAAf;;AACAQ,QAAAA,QAAQ,CAACV,WAAT,GAAuBA,WAAvB;AACA,eAAOU,QAAP;AACD;;AACD,SAAKd,OAAO,CAACS,KAAR,CAAcO,cAAnB;AAAmC;AACjCL,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBL,MAAxB;AACA,YAAIU,OAAO,GAAGV,MAAM,CAACM,OAArB;;AACA,YAAIC,QAAQ,GAAGb,CAAC,CAACc,SAAF,CAAYT,KAAZ,CAAf;;AACAQ,QAAAA,QAAQ,CAACI,SAAT,GAAqBD,OAArB;AACAH,QAAAA,QAAQ,CAACK,IAAT,GAAgB,IAAhB;AACA,eAAOL,QAAP;AACD;;AAED;AACE,aAAOR,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,MAAMc,WAAW,GAAGlB,eAAe,CAAC;AAClCmB,EAAAA,IAAI,EAAEhB;AAD4B,CAAD,CAAnC;AAIA,eAAee,WAAf","sourcesContent":["import ACTIONS from \"./action\";\nimport _ from \"lodash\";\nimport { combineReducers } from \"redux\";\n\nconst defaultState = {\n  currentUser: \"\"\n};\n\nconst userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.Types.SET_CURRENT_USER: {\n      console.log(\"ACTION: \", action);\n\n      let currentUser = action.payload;\n      let newState = _.cloneDeep(state);\n      newState.currentUser = currentUser;\n      return newState;\n    }\n    case ACTIONS.Types.SET_AUTH_TOKEN: {\n      console.log(\"ACTION: \", action);\n      let newAuth = action.payload;\n      let newState = _.cloneDeep(state);\n      newState.authToken = newAuth\n      newState.auth = true\n      return newState\n    }\n\n    default:\n      return state;\n  }\n};\n\nconst rootReducer = combineReducers({\n  user: userReducer\n})\n\nexport default rootReducer;"]},"metadata":{},"sourceType":"module"}