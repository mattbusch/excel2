{"ast":null,"code":"import dummyData from './DummyData';\nimport Config from './../Config';\nconst UserServices = {\n  inviteNewUser: function (userId, type) {\n    return null;\n  },\n  getStudents: function () {\n    return dummyData.users.filter(user => user.role && user.role == 'Student');\n  },\n  getInstructors: function () {\n    return dummyData.users.filter(user => user.role && user.role == 'Faculty/Staff');\n  },\n  sendResetPasswordLink: function (userEmail) {\n    return null;\n  },\n  getMentors: function () {\n    return dummyData.users.filter(user => user.role && user.role == 'Mentor');\n  },\n  assignMentor: function (studentEmail, mentorEmail) {\n    return null;\n  },\n\n  getTrackingLocations() {\n    return dummyData.trackingLocations;\n  },\n\n  getCompetencies() {\n    return dummyData.competencies;\n  },\n\n  deleteStudent(studentEmail) {\n    return null;\n  },\n\n  getMentor(studentEmail) {\n    let student = dummyData.users.filter(user => user.email == studentEmail);\n    console.log(\"GOODBYE\", student);\n    return student[0].mentor;\n  },\n\n  unassignMentor(studentEmail) {\n    return null;\n  },\n\n  searchTrackingLocations(search) {\n    return dummyData.trackingLocations.filter(trackingLocation => trackingLocation.name.toLowerCase().includes(search.toLowerCase()) || search == '');\n  },\n\n  searchCompetencies(search) {\n    return dummyData.competencies.filter(competency => competency.title.toLowerCase().includes(search.toLowerCase()) || search == '');\n  },\n\n  getTrackingLocation(tlid) {\n    return dummyData.trackingLocations.filter(trackingLocation => trackingLocation.locationID == tlid);\n  },\n\n  async createTrackingLocation(name) {\n    let data = {\n      \"LocationName\": name,\n      \"CompetencyIds\": \"[]\"\n    };\n    let url = Config.baseAPI + 'tracking-location-to-competencies';\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    return response;\n  },\n\n  addCompToTL(compId, track) {\n    console.log(compId);\n    return null;\n  },\n\n  addStudentToTL(studentEmail, track) {\n    console.log(studentEmail);\n    return null;\n  },\n\n  addInstructorToTL(instructorEmail, track) {\n    console.log(instructorEmail);\n    return null;\n  },\n\n  getInstructor(emails) {\n    return dummyData.users.filter(user => emails.includes(user.email));\n  },\n\n  tlToCompetency(cids) {\n    return dummyData.competencies.filter(competency => cids.includes(competency.id));\n  },\n\n  getUsers(email) {\n    return dummyData.users.filter(user => email.includes(user.email));\n  }\n\n};\nexport default UserServices;","map":{"version":3,"sources":["/home/dev/excel-tracker/excel-tracker-application/src/services/UserServices.js"],"names":["dummyData","Config","UserServices","inviteNewUser","userId","type","getStudents","users","filter","user","role","getInstructors","sendResetPasswordLink","userEmail","getMentors","assignMentor","studentEmail","mentorEmail","getTrackingLocations","trackingLocations","getCompetencies","competencies","deleteStudent","getMentor","student","email","console","log","mentor","unassignMentor","searchTrackingLocations","search","trackingLocation","name","toLowerCase","includes","searchCompetencies","competency","title","getTrackingLocation","tlid","locationID","createTrackingLocation","data","url","baseAPI","response","fetch","method","headers","body","JSON","stringify","addCompToTL","compId","track","addStudentToTL","addInstructorToTL","instructorEmail","getInstructor","emails","tlToCompetency","cids","id","getUsers"],"mappings":"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","sourcesContent":["import dummyData from './DummyData'\nimport Config from './../Config'\n\n\nconst UserServices = {\n  inviteNewUser: function(userId, type) {\n    return null;\n  },\n\n  getStudents: function() {\n    return dummyData.users.filter((user) => (user.role && user.role == 'Student'))\n  },\n\n  getInstructors: function() {\n    return dummyData.users.filter((user) => (user.role && user.role == 'Faculty/Staff'))\n  },\n\n  sendResetPasswordLink: function(userEmail) {\n    return null;\n  },\n\n  getMentors: function() {\n    return dummyData.users.filter((user) => (user.role && user.role == 'Mentor'))\n  },\n\n  assignMentor: function(studentEmail, mentorEmail) {\n    return null\n  },\n\n  getTrackingLocations() {\n    return dummyData.trackingLocations\n  },\n\n  getCompetencies() {\n    return dummyData.competencies\n  },\n\n  deleteStudent(studentEmail) {\n    return null;\n  },\n\n  getMentor(studentEmail) {\n    let student = dummyData.users.filter((user) => user.email == studentEmail);\n    console.log(\"GOODBYE\", student)\n    return student[0].mentor;\n  },\n\n  unassignMentor(studentEmail) {\n    return null\n  },\n\n  searchTrackingLocations(search) {\n    return dummyData.trackingLocations.filter((trackingLocation) => (trackingLocation.name.toLowerCase().includes(search.toLowerCase()))||search =='') \n  },\n\n  searchCompetencies(search) {\n    return dummyData.competencies.filter((competency) => (competency.title.toLowerCase().includes(search.toLowerCase()))||search =='') \n  },\n\n  getTrackingLocation(tlid) {\n    return dummyData.trackingLocations.filter((trackingLocation) => (trackingLocation.locationID == tlid))\n  },\n\n  async createTrackingLocation(name) {\n    let data = {\n      \"LocationName\": name,\n      \"CompetencyIds\": \"[]\"\n    }\n\n    let url = Config.baseAPI + 'tracking-location-to-competencies'\n\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n\n    return response\n\n  },\n\n  addCompToTL(compId, track) {\n    console.log(compId)\n    return null\n  },\n\n  addStudentToTL(studentEmail, track) {\n    console.log(studentEmail)\n    return null\n  },\n\n  addInstructorToTL(instructorEmail, track) {\n    console.log(instructorEmail)\n    return null\n  },\n\n  getInstructor(emails) {\n    return dummyData.users.filter((user) => emails.includes(user.email))\n  }, \n  tlToCompetency(cids) {\n    return dummyData.competencies.filter((competency) => cids.includes(competency.id))\n  },\n\n  getUsers(email) {\n    return dummyData.users.filter((user) => email.includes(user.email))\n  }, \n}\n\nexport default UserServices;"]},"metadata":{},"sourceType":"module"}